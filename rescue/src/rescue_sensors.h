/**
  rescue_sensors.h
  Purpose: Interface with rescue robots of Icaro course

  @author Emanuele Giacomini
  @version 0.1 07/10/2017
*/

#ifndef rescue_sensors_h
#define rescue_sensors_h

#include <Arduino.h>
#include <math.h>
#include "vector_man.h"


class rescue_line{
  /*
    Size of the _sensor_pins vector.
  */
  int _size;
  /*
    Vector containing sensor pins.
  */
  int* _sensor_pins;
  /*
    Contains the positions of each sensor.
    Auto-generated by the init method.
  */
  int* _sensor_position;

  int* _threshold;
  int _calibration_mode = 0;
  int* _low_reading;
  int* _high_reading;

public:
  // Constructor
  rescue_line();
  //Destructor
  ~rescue_line();
  /*
    Initialize the object
    @param sensor_pins constant integer vector to sensors pins.
    @param size Size of the sensor_pins vector.
  */
  void init(const int* sensor_pins, const int size);
  /*
    Reads the sensor by a given index.
    @param index Index of sensor_pins vector to read.
    @return Value between 0 and 1023 depending on light recived by sensor.
  */
  int readSensor(const int index);
  /*
    Reads the sensor by a given index.
    @param index Index of sensor_pins vector to read.
    @return Boolean value depeding on the light recived by sensor.
  */
  int readSensorBool(const int index);
  /*
    Get the line position relative to the robot.
    @return Signed integer representing line position.
  */
  int readLine();
  /*
    Starts the calibration process. Recall calibrate function during
    the loop in order to calibrate.
  */
  void startCalibration();
  /*
    Makes the appropriate reading in order to calibrate the readings.
  */
  void calibrate();
  /*
    Stops the calibration
  */
  void stopCalibration();
  /*
    Sets the threshold for a given sensor.
    @param index Index of sensor_pins vector to read.
    @param threshold Value between 0-1023 to set the threshold.
  */
  void setThreshold(const int index, const int threshold);
  /*
    Manually sets a position for the _sensor_position vector.
  */
  void setSensorPosition(const int index, const int value);
};

#endif
